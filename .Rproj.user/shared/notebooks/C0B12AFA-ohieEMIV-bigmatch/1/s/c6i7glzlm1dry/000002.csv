"0","##### ListCART: Run CART on abs(Y) on X from rpart on cp=0.0001 and maxdepth=2"
"0","### FUNCTION: outputs list of CART trees from rpart on cp=0.0001 and maxdepth=2"
"0","### INPUT: Z: instrument (n by 1 vector)"
"0","###        tableDF: data frame of the table of responses (n by r)"
"0","###        D: dose (n by 1 vector)"
"0","###        X: covariate matrix (n by p)"
"0","###        matchedNumber: matching vector from matching() function"
"0","###        null: the lambda_0 value in H0: lambda = lambda_0"
"0","### OUTPUT: list of CART trees from rpart on cp=0.0001 and maxdepth=2"
"0","ListCART6 = function(Z,tableDF,D,X,matchedNumber,null = 0){"
"0","  "
"0","  if (class(tableDF) != ""data.frame""){tableDF = as.data.frame(tableDF)}"
"0","  "
"0","  "
"0","  tdfNA <- colnames(tableDF)[colSums(is.na(tableDF)) > 0]  # find which variables have missing values "
"0","  "
"0","  varsWithNA <- tableDF %>% dplyr::select(tdfNA)  # select missing variables"
"0","  "
"0","  # find rows where NA for outcome variable, get pair ID for those rows, "
"0","  # ignore pairs associated with that ID"
"0","  tdfNAid <- lapply(varsWithNA, function(x) which(is.na(x)))  # list of row indices of missingness"
"0","  pairID <- lapply(tdfNAid, function(x) matchedNumber[x])  # list of pair IDs where at least one pair has missing outcome"
"0","  idxPair <- lapply(pairID, function(x) which(matchedNumber %in% x))  # list of row indices of pairs corresponding to a missing outcome value"
"0","  "
"0","  cartList <- list()"
"0","  "
"0","  for (i in colnames(tableDF)) {"
"0","    if (sum(is.na(tableDF[c(i)])) > 0){"
"0","      Zcart=Z[-idxPair[[c(i)]]]"
"0","      Dcart=D[-idxPair[[c(i)]]]"
"0","      Rcart=tableDF[-idxPair[[c(i)]],c(i)]"
"0","      Xcart=as.matrix(X[-idxPair[[c(i)]],])"
"0","      matchedNumberCart = matchedNumber[-idxPair[[c(i)]]]"
"0","      "
"0","      # drop individuals who weren't matched"
"0","      uMatchedSetsCart = unique(matchedNumberCart[!is.na(matchedNumberCart)])  # guarantee no unmatched individuals"
"0","      "
"0","      # get absolute treated-minus-control differences and covariate matrix"
"0","      absY <- numeric(length(uMatchedSetsCart))"
"0","      Xi <- data.frame(matrix(0, ncol = dim(Xcart)[2], nrow ="
"0","                                length(uMatchedSetsCart)))"
"0","      check <- numeric(length(uMatchedSetsCart))"
"0","      for (j in 1:length(uMatchedSetsCart)) {"
"0","        check[j] <- length(which(matchedNumberCart==uMatchedSetsCart[j]))"
"0","        pairR <- Rcart[which(matchedNumberCart==uMatchedSetsCart[j])]"
"0","        pairZ <- Zcart[which(matchedNumberCart==uMatchedSetsCart[j])]"
"0","        pairD <- Dcart[which(matchedNumberCart==uMatchedSetsCart[j])]"
"0","        augPairDiff <- pairR %*% pairZ - null * pairD %*% pairZ - "
"0","          (pairR %*% (1-pairZ) - null * pairD %*% (1-pairZ))"
"0","        absY[j] <- abs(augPairDiff)"
"0","        Xi[j,] <- colMeans(Xcart[which(matchedNumberCart =="
"0","                                         uMatchedSetsCart[j]),], na.rm=TRUE)"
"0","      }"
"0","      if (length(unique(absY))==2){absY <- factor(absY)}"
"0","      "
"0","      colnames(Xi) <- colnames(Xcart)"
"0","      #cartdf <- data.frame(rank(absY), Xi)"
"0","      # factorVars <- colnames(Xi)[-2]  # all variables in XCART but age"
"0","      # Xi[factorVars] <- lapply(Xi[factorVars], factor)"
"0","      cartdf <- data.frame(absY, Xi)"
"0","      "
"0","      # regress rank of |Y| on X"
"0","      #emTree <- rpart(rank.absY.~., data=cartdf, "
"0","      #control =rpart.control(minsplit =1,minbucket=1, cp=0,maxdepth = 5),"
"0","      #model = TRUE)"
"0","      "
"0","      # regres |Y| on X"
"0","      emTree <- rpart(absY~., data=cartdf, "
"0","                      control =rpart.control(minsplit =20,"
"0","                                             #minbucket=round(minsplit/3),"
"0","                                             cp=0.0001,"
"0","                                             maxdepth = 3), "
"0","                      model = TRUE)"
"0","    } else {"
"0","      Zcart=Z"
"0","      Rcart=tableDF[c(i)]"
"0","      Xcart=X"
"0","      Dcart=D"
"0","      matchedNumberCart = matchedNumber"
"0","      "
"0","      # drop individuals who weren't matched"
"0","      uMatchedSetsCart = unique(matchedNumberCart[!is.na(matchedNumberCart)])  # guarantee no unmatched individuals"
"0","      "
"0","      # get absolute treated-minus-control differences and covariate matrix"
"0","      absY <- numeric(length(uMatchedSetsCart))"
"0","      Xi <- data.frame(matrix(0, ncol = dim(Xcart)[2], nrow ="
"0","                                length(uMatchedSetsCart)))"
"0","      for (j in 1:length(uMatchedSetsCart)) {"
"0","        pairR <- Rcart[which(matchedNumberCart==uMatchedSetsCart[j])]"
"0","        pairZ <- Zcart[which(matchedNumberCart==uMatchedSetsCart[j])]"
"0","        pairD <- Dcart[which(matchedNumberCart==uMatchedSetsCart[j])]"
"0","        augPairDiff <- pairR %*% pairZ - null * pairD %*% pairZ - "
"0","          (pairR %*% (1-pairZ) - null * pairD %*% (1-pairZ))"
"0","        absY[j] <- abs(augPairDiff)"
"0","        Xi[j,] <- colMeans(Xcart[which(matchedNumberCart =="
"0","                                         uMatchedSetsCart[j]),], na.rm=TRUE)"
"0","      }"
"0","      if (length(unique(absY))==2){absY <- factor(absY)}"
"0","      colnames(Xi) <- colnames(Xcart)"
"0","      #cartdf <- data.frame(rank(absY), Xi)"
"0","      # factorVars <- colnames(Xi)[-2]  # all variables in XCART but age"
"0","      # Xi[factorVars] <- lapply(Xi[factorVars], factor)"
"0","      cartdf <- data.frame(absY, Xi)"
"0","      "
"0","      # regress rank of |Y| on X"
"0","      #emTree <- rpart(rank.absY.~., data=cartdf, "
"0","      #control =rpart.control(minsplit =1,minbucket=1, cp=0,maxdepth = 5),"
"0","      #model = TRUE)"
"0","      "
"0","      # regres |Y| on X"
"0","      emTree <- rpart(absY~., data=cartdf, "
"0","                      control =rpart.control(minsplit =20,"
"0","                                             #minbucket=round(minsplit/3),"
"0","                                             cp=0.0001,"
"0","                                             maxdepth = 3), "
"0","                      model = TRUE)"
"0","    }"
"0","    cartList[[i]] <- emTree"
"0","  }"
"0","  return(cartList)"
"0","}"
